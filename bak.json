{
    "openapi": "3.0.2",
    "info": {
        "title": "Swagger Petstore - OpenAPI 3.0",
        "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.19"
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "servers": [
        {
            "url": "https://api.woo.org/"
        }
    ],
    
    "paths": {
        "/v3/trade/order": {
            "post": {
                "description": "post order",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "$ref": "#/components/responses/CreateOrderResponse"
                                }                               
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                      "ApiKeyAuth": [],
                      "ApiSignAuth": [],
                      "ApiTimestampAuth": []
                    }
                ]
            }
        },
        "/v3/public/systemInfo": {
            "get": {
                "description": "Get current system maintenance status. A status value of 0 means the system is functioning properly, a status value of 1 means the trading services are under maintenance and a status value of 2 means the system is under maintenance.",
                
                "parameters": [
                    
                ],
                
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "$ref": "#/components/responses/SystemInfoResponse"
                                }                               
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    
                ]
            }
        },
        "/v3/account/referral/summary": {
            "get": {
                "description": "Get referral information from each user you has referred.",
                
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "start time in unix timestamp",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "end time in unix timestamp",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "the page you wish to query.",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "the page size you wish to query, default = 25, 1000 at max.",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "default": 25

                        }
                    }

                ],
                
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema":{
                                    "$ref": "#/components/responses/SummaryResponse"
                                }                               
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                      "ApiKeyAuth": [],
                      "ApiSignAuth": [],
                      "ApiTimestampAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses":{
             "BaseResponse": {
              "description": "A response indicating the result of an operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                      }
                    }
                  }
                }
              }
            },
            "CreateOrderResponse": {
              "description": "Create order response",
              "allOf": [
                { "$ref": "#/components/responses/BaseResponse" },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "orderId": {
                          "type": "integer",
                          "description": "The ID of the created order"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of order"
                        },
                        "price": {
                          "type": "string",
                          "description": "The price of the order"
                        },
                        "quantity": {
                          "type": "string",
                          "description": "The quantity of the item ordered"
                        },
                        "amount": {
                          "type": "string",
                          "description": "The total amount of the order"
                        },
                        "clientOrderId": {
                          "type": "integer",
                          "description": "The client-specific order ID"
                        }
                      }
                    }
                  }
                }
              ]
            },
            "SystemInfoResponse": {
                "allOf": [
                  { "$ref": "#/components/responses/BaseResponse" },
                  {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",

                        "properties": {
                          "status": {
                            "type": "integer",
                            "description": ""
                          },
                          "msg": {
                            "type": "string",
                            "description": ""
                          },
                          "estimated_end_time": {
                            "type": "integer",
                            "description": ""
                          }
                        }
                        
                      }
                    }
                  }
                ]
            },
            "SummaryResponse": {
                "allOf": [
                  { "$ref": "#/components/responses/BaseResponse" },
                  {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",

                        "properties": {
                          "status": {
                            "type": "integer",
                            "description": ""
                          },
                          "msg": {
                            "type": "string",
                            "description": ""
                          },
                          "estimated_end_time": {
                            "type": "integer",
                            "description": ""
                          }
                        }
                        
                      }
                    }
                  }
                ]
            }
        },
        "schemas": {
            "CreateOrder": {
               "required":["symbol","side","type"],
                "type": "object",
                "properties": {
                    "symbol": {
                        "type": "string",
                        "description": "Symbol name",
                        "example": "SPOT_BTC_USDT"
                    },
                    "clientOrderId": {
                        "type": "integer",
                        "description": "Valid input ranges from 0 to 9223372036854775807",
                        "example": "1954766344355779056"
                    },
                    "orderTag": {
                        "type": "string",
                        "description": "Optional tag for this order, max string length: 64",
                        "example": ""
                    },
                    "side": {
                        "type": "string",
                        "description": "BUY/SELL",
                        "example": ""
                    },
                    "positionSide": {
                        "type": "string",
                        "description": "Position side; The default is BOTH in the one way mode;  Can only be LONG or SHORT in the hedge mode.  Only applicable to perpetual instruments.",
                        "example": ""
                    },
                    "type": {
                        "type": "string",
                        "description": "LIMIT/MARKET/IOC/FOK/POST_ONLY/ASK/BID",
                        "example": ""
                    },
                    "price": {
                        "type": "string",
                        "description": "Only applicable to LIMIT/IOC/FOK/POST_ONLY orders;  MARKET/ASK/BID orders will ignore this field",
                        "example": ""
                    },
                    "quantity": {
                        "type": "string",
                        "description": "Either quantity or amount is required;  If both are passed, the request will be rejected",
                        "example": ""
                    },
                    "amount": {
                        "type": "string",
                        "description": "Only applicable to MARKET/ASK/BID orders on spot instruments;  Either quantity or amount is required;  If both are passed, the request will be rejected",
                        "example": ""
                    },
                    "reduceOnly": {
                        "type": "boolean",
                        "description": "Only applicable to perpetual instruments; Whether the order can only reduce in position size; valid options are true/false",
                        "example": ""
                    },
                  
                    "visibleQuantity": {
                        "type": "string",
                        "description": "The order quantity visible on orderbook",
                        "example": ""
                    }
                }
            }
          
        },
        "securitySchemes": {
            "petstore_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
                        "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                        }
                    }
                }
            },
            "bearerAuth": {
                "type": "http",
                "scheme":"bearer",
                "bearerFormat":"JWT"
            },
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            },
            "ApiKeyAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "x-api-key"
            },
            "ApiSignAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "x-api-signature"
            },
            "ApiTimestampAuth": {
              "type": "apiKey",
              "in": "header",
              "name": "x-api-timestamp"
            }
        }
    }
}