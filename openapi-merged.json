{
  "openapi": "3.0.2",
  "info": {
    "title": "Swagger Petstore - OpenAPI 3.0",
    "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.19"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://api.woo.org/"
    }
  ],
  "paths": {
    "/v3/public/token": {
      "get": {
        "description": "Get the available tokens that WOO X supports.qqq",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": []
      }
    },
    "/v3/public/tokenNetwork": {
      "get": {
        "description": "Get the available networks for each token as well as the deposit/withdrawal information.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenNetworkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": []
      }
    },
    "/v3/public/instruments": {
      "get": {
        "description": "Get the available networks for each token as well as the deposit/withdrawal information.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenNetworkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": []
      }
    },
    "/v3/futures/defaultMarginMode": {
      "get": {
        "description": "get account level default margin mode",
        "parameters": [
          {
            "name": "symbol",
            "in": "query",
            "description": "",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultMarginModeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSignAuth": [],
            "ApiTimestampAuth": []
          }
        ]
      }
    },
    "/v3/asset/token/history": {
      "get": {
        "description": "get token history",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "WITHDRAW/DEPOSIT/FIAT_WITHDRAW/FIAT_DEPOSIT/EARN/VAULT_WITHDRAW/VAULT_DEPOSIT/YIELD_TO_BALANCE/CREDIT/DISTRIBUTION/REFERRAL/SUB_ACCOUNT_TRANSFER/REBATE/LIQUIDATION/SPECIAL/STAKING/UNSTAKING/UNSTAKING_FEE/INTEREST/CONVERT/FUNDING_FEE/SPOT_TRADING/TRADING_FEE/REALIZED_PNL/RFQ/ COPY_FEE / COPY_PROFIT_SHARED / FEE_REBATE",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/start_filter"
          },
          {
            "$ref": "#/components/parameters/end_filter"
          },
          {
            "$ref": "#/components/parameters/page_filter"
          },
          {
            "$ref": "#/components/parameters/size_filter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSignAuth": [],
            "ApiTimestampAuth": []
          }
        ]
      }
    },
    "/v3/spotMargin/leverage": {
      "post": {
        "description": "set leverage",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLeverage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSignAuth": [],
            "ApiTimestampAuth": []
          }
        ]
      }
    },
    "/v3/trade/order": {
      "post": {
        "description": "post order",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSignAuth": [],
            "ApiTimestampAuth": []
          }
        ]
      },
      "delete": {
        "description": "cancel order",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSignAuth": [],
            "ApiTimestampAuth": []
          }
        ]
      }
    },
    "/v3/public/systemInfo": {
      "get": {
        "description": "Get current system maintenance status. A status value of 0 means the system is functioning properly, a status value of 1 means the trading services are under maintenance and a status value of 2 means the system is under maintenance.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": []
      }
    },
    "/v3/account/referral/summary": {
      "get": {
        "description": "Get referral information from each user you has referred.",
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "description": "start time in unix timestamp",
            "required": false,
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "end time in unix timestamp",
            "required": false,
            "explode": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "the page you wish to query.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "the page size you wish to query, default = 25, 1000 at max.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSignAuth": [],
            "ApiTimestampAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      },
      "ApiSignAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-signature"
      },
      "ApiTimestampAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-timestamp"
      }
    },
    "schemas": {
      "CommonResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "true"
          },
          "timestamp": {
            "type": "integer",
            "description": "timestamp"
          }
        }
      },
      "TokenResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "rows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "network": {
                          "type": "string",
                          "description": ""
                        },
                        "fullname": {
                          "type": "string",
                          "description": ""
                        },
                        "decimals": {
                          "type": "integer",
                          "description": ""
                        },
                        "token": {
                          "type": "string",
                          "description": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "TokenNetworkResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "rows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string",
                          "description": ""
                        },
                        "token": {
                          "type": "string",
                          "description": ""
                        },
                        "name": {
                          "type": "string",
                          "description": ""
                        },
                        "minimumWithdrawal": {
                          "type": "string",
                          "description": ""
                        },
                        "withdrawalFee": {
                          "type": "string",
                          "description": ""
                        },
                        "allowDeposit": {
                          "type": "integer",
                          "description": ""
                        },
                        "allowWithdraw": {
                          "type": "integer",
                          "description": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "DefaultMarginModeResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "rows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "integer",
                          "description": ""
                        },
                        "defaultMarginMode": {
                          "type": "string",
                          "description": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "Meta": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of record"
          },
          "recordsPerPage": {
            "type": "integer",
            "description": "Number of records per page"
          },
          "currentPage": {
            "type": "integer",
            "description": "Current page number"
          }
        }
      },
      "TokenHistoryResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "rows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": ""
                        },
                        "type": {
                          "type": "string",
                          "description": "type"
                        },
                        "token": {
                          "type": "string",
                          "description": "token"
                        },
                        "amount": {
                          "type": "string",
                          "description": "amount"
                        },
                        "timestamp": {
                          "type": "integer",
                          "description": "timestamp"
                        }
                      }
                    }
                  },
                  "meta": {
                    "$ref": "#/components/schemas/Meta"
                  }
                }
              }
            }
          }
        ]
      },
      "SetLeverage": {
        "required": [
          "leverage"
        ],
        "type": "object",
        "properties": {
          "leverage": {
            "type": "integer",
            "description": "For margin mode: 3, 4, 5, 10; for futures mode: 1, 2, 3, 4, 5, 10, 15, 20, 30, 40, 50",
            "example": "5"
          }
        }
      },
      "CreateOrder": {
        "required": [
          "symbol",
          "side",
          "type"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "description": "Symbol name",
            "example": "SPOT_BTC_USDT"
          },
          "clientOrderId": {
            "type": "integer",
            "description": "Valid input ranges from 0 to 9223372036854775807",
            "example": "1954766344355779056"
          },
          "orderTag": {
            "type": "string",
            "description": "Optional tag for this order, max string length: 64",
            "example": ""
          },
          "side": {
            "type": "string",
            "description": "BUY/SELL",
            "example": ""
          },
          "positionSide": {
            "type": "string",
            "description": "Position side; The default is BOTH in the one way mode;  Can only be LONG or SHORT in the hedge mode.  Only applicable to perpetual instruments.",
            "example": ""
          },
          "type": {
            "type": "string",
            "description": "LIMIT/MARKET/IOC/FOK/POST_ONLY/ASK/BID",
            "example": ""
          },
          "price": {
            "type": "string",
            "description": "Only applicable to LIMIT/IOC/FOK/POST_ONLY orders;  MARKET/ASK/BID orders will ignore this field",
            "example": ""
          },
          "quantity": {
            "type": "string",
            "description": "Either quantity or amount is required;  If both are passed, the request will be rejected",
            "example": ""
          },
          "amount": {
            "type": "string",
            "description": "Only applicable to MARKET/ASK/BID orders on spot instruments;  Either quantity or amount is required;  If both are passed, the request will be rejected",
            "example": ""
          },
          "reduceOnly": {
            "type": "boolean",
            "description": "Only applicable to perpetual instruments; Whether the order can only reduce in position size; valid options are true/false",
            "example": ""
          },
          "visibleQuantity": {
            "type": "string",
            "description": "The order quantity visible on orderbook",
            "example": ""
          }
        }
      },
      "CreateOrderResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "orderId": {
                    "type": "integer",
                    "description": ""
                  },
                  "type": {
                    "type": "string",
                    "description": ""
                  },
                  "price": {
                    "type": "string",
                    "description": ""
                  },
                  "quantity": {
                    "type": "string",
                    "description": ""
                  },
                  "amount": {
                    "type": "string",
                    "description": ""
                  },
                  "clientOrderId": {
                    "type": "integer",
                    "description": ""
                  }
                }
              }
            }
          }
        ]
      },
      "CancelOrder": {
        "required": [
          "symbol"
        ],
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "description": "Symbol name",
            "example": "SPOT_BTC_USDT"
          },
          "orderId": {
            "type": "integer",
            "description": "Id of the order; Either orderId or clientOrderId is required. If both are passed, orderId will be used.",
            "example": "1954766344355779056"
          },
          "clientOrderId": {
            "type": "integer",
            "description": "Client order Id as assigned by the user; Either orderId or clientOrderId is required. If both are passed, orderId will be used.",
            "example": "1954766344355779056"
          }
        }
      },
      "CancelOrderResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": ""
                  }
                }
              }
            }
          }
        ]
      },
      "SystemInfoResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": ""
                  },
                  "msg": {
                    "type": "string",
                    "description": ""
                  },
                  "estimated_end_time": {
                    "type": "integer",
                    "description": ""
                  }
                }
              }
            }
          }
        ]
      },
      "ReferralResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "properties": {
                  "rows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "referralId": {
                          "type": "integer",
                          "description": "Referral ID"
                        },
                        "registerTime": {
                          "type": "string",
                          "description": "Time the referral was registered"
                        },
                        "referralCode": {
                          "type": "string",
                          "description": "Referral code"
                        },
                        "tradeStatus": {
                          "type": "string",
                          "description": "Status of the trade"
                        },
                        "earned": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "token": {
                                "type": "string",
                                "description": "Token type"
                              },
                              "amount": {
                                "type": "string",
                                "description": "Amount earned"
                              }
                            }
                          }
                        },
                        "email": {
                          "type": "string",
                          "description": "Email address"
                        }
                      }
                    }
                  },
                  "meta": {
                    "$ref": "#/components/schemas/Meta"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "parameters": {
      "start_filter": {
        "name": "startTime",
        "in": "query",
        "description": "start www time in unix timestamp",
        "required": false,
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "end_filter": {
        "name": "endTime",
        "in": "query",
        "description": "end time in unix timestamp",
        "required": false,
        "explode": true,
        "schema": {
          "type": "integer"
        }
      },
      "page_filter": {
        "name": "page",
        "in": "query",
        "description": "the page you wish to query.",
        "required": false,
        "explode": true,
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "size_filter": {
        "name": "size",
        "in": "query",
        "description": "the page size you wish to query, default = 25, 1000 at max.",
        "required": false,
        "explode": true,
        "schema": {
          "type": "integer",
          "default": 25
        }
      }
    }
  }
}